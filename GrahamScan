#include<stdio.h>
#define HEIGHT 90
#define WIDTH 90
typedef struct{
    int x;
    int y;
}coordinate;

coordinate e[200];
coordinate e2[200];
int getDet(int x1,int y1,int x2,int y2,int x3,int y3){
    int result;
    result = ((x2*y3-y2*x3)-(x1*y3-y1*x3)+(x1*y2-y1*x2));
    if (result<0) {
        return 1;//right turn
    }else if(result>0){
        return -1;//left turn
    }else{
        return 0;
    }
}

int getSign(int line,int col,int k,int k2){
    int i,flag = 0;
    for (i=0; i<=k; i++) {
            if (e[i].x==col && e[i].y == line) {
                flag =1;
                break;
            }
    }
    if (flag==0) {
        for (i=0; i<=k2; i++) {
                if (e2[i].x==col && e2[i].y == line) {
                    flag =1;
                    break;
                }
        }
    }
    return flag;
}

int grahamUp(coordinate a[],int n){
    int k,l,m;
    int i,j=2,result;
    e[0] = a[0];
    e[1] = a[1];
    for(i=2;i<n;i++){
        e[j] = a[i];
        if(j>=2){
            result = getDet(e[j-2].x,e[j-2].y,e[j-1].x,e[j-1].y,e[j].x,e[j].y);
            while (result<=0) {
                j--;
                e[j]=e[j+1];
                e[j+1].x=0;
                e[j+1].y=0;
                if(j<2) break;
                result = getDet(e[j-2].x,e[j-2].y,e[j-1].x,e[j-1].y,e[j].x,e[j].y);
            }
        }
        j++;
    }
    return j-1;
    
}

int grahamDown(coordinate a[],int n){
    int k,l,m;
    int i,j=2,result;
    e2[0] = a[n-1];
    e2[1] = a[n-2];
    for(i=n-3;i>=0;i--){
        e2[j] = a[i];
        if(j>=2){
            result = getDet(e2[j-2].x,e2[j-2].y,e2[j-1].x,e2[j-1].y,e2[j].x,e2[j].y);
            while (result<=0) {
                j--;
                e2[j]=e2[j+1];
                e2[j+1].x=0;
                e2[j+1].y=0;
                if(j<2) break;
                result = getDet(e2[j-2].x,e2[j-2].y,e2[j-1].x,e2[j-1].y,e2[j].x,e2[j].y);
            }
        }
        j++;
    }
    return j-1;
    
}

void sort(coordinate a[],int n){
    int i,j;
    coordinate temp;
    for(i=0;i<n;i++){
        for(j=0;j<n-1;j++){
            if(a[j].x>a[j+1].x){
                temp = a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
            }
            if(a[j].x == a[j+1].x){
                if(a[j].y >a[j+1].y){
                    temp = a[j];
                    a[j] = a[j+1];
                    a[j+1] = temp;
                }
            }
        }
    }
}


int main(){
    FILE *fp;
    FILE *fp2;
    coordinate d[200];
    char ch;
    int i=0,k1,k2;
    int counter = 0;
    int line =1;
    int col = 1;
    int details;
    fp=fopen("surya.txt","r");
    while(!feof(fp)){
        ch=getc(fp);
        if(ch == '\n'){
            line++;
            col =0;
        }
        if(ch=='+'){
            d[i].y = HEIGHT-line;
            d[i].x = col;
            i++;
            counter++;
        }
        col++;
    }
    for(i=0;i<counter;i++){
        printf("\n(x,y) = (%d,%d) \n",d[i].x,d[i].y);
    }
    sort(d,counter);
    for(i=0;i<counter;i++){
        printf("(x,y) = (%d,%d)\t",d[i].x,d[i].y);
    }
    printf("\nedges\n");
    k1=grahamUp(d,counter);
    for(i=0;i<=k1;i++){
        printf("(x,y) = (%d,%d)\t",e[i].x,e[i].y);
    }
    printf("\nedges\n");
    k2=grahamDown(d,counter);
    for(i=0;i<=k2;i++){
        printf("(x,y) = (%d,%d)\t",e2[i].x,e2[i].y);
    }
    fclose(fp);
    line =1;
    col = 1;
    i=0;
    fp=fopen("surya.txt","r");
    fp2 = fopen("temp.txt","w");
    while(!feof(fp)){
        ch=getc(fp);
        details = getSign(HEIGHT-line,col,k1,k2);
        if(ch == '\n'){
            line++;
            col =0;
        }
        if(details == 1){
            putc('o',fp2);
        }else{
            putc(ch,fp2);
        }
        col++;
    }
    fclose(fp);
    fclose(fp2);
    
}
